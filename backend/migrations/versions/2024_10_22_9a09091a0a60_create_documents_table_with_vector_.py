"""Create documents table with vector extension

Revision ID: 9a09091a0a60
Revises: 
Create Date: 2024-10-22 16:44:43.821820

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import pgvector


# revision identifiers, used by Alembic.
revision: str = "9a09091a0a60"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE EXTENSION IF NOT EXISTS vector;")
    op.execute("CREATE EXTENSION pg_trgm;")
    op.create_table(
        "documents",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("file_id", sa.String(length=36), nullable=False),
        sa.Column("file_name", sa.String(length=150), nullable=False),
        sa.Column("page_number", sa.Integer(), nullable=False),
        sa.Column("content_text", sa.Text(), nullable=False),
        sa.Column(
            "content_embedding", pgvector.sqlalchemy.Vector(dim=1024), nullable=False
        ),
        sa.Column("created_datetime_utc", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_datetime_utc", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_documents_embedding",
        "documents",
        ["content_embedding"],
        unique=False,
        postgresql_using="hnsw",
        postgresql_with={"M": "16", "ef_construction": "64"},
        postgresql_ops={"content_embedding": "vector_cosine_ops"},
    )
    op.create_index(
        "idx_documents_fulltext",
        "documents",
        ["content_text"],
        unique=False,
        postgresql_using="gin",
        postgresql_ops={"content_text": "gin_trgm_ops"},
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "idx_documents_fulltext",
        table_name="documents",
        postgresql_using="gin",
        postgresql_ops={"content_text": "gin_trgm_ops"},
    )
    op.drop_index(
        "idx_documents_embedding",
        table_name="documents",
        postgresql_using="hnsw",
        postgresql_with={"M": "16", "ef_construction": "64"},
        postgresql_ops={"content_embedding": "vector_cosine_ops"},
    )
    op.drop_table("documents")
    op.execute("DROP EXTENSION IF EXISTS vector;")
    op.execute("DROP EXTENSION IF EXISTS pg_trgm;")
    # ### end Alembic commands ###
